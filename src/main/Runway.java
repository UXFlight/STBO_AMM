package main;

public class Runway {
	
	private double width;
	private int surfaceCode;  // see surface type code
	private int shoulderSurfaceCode;  // see surface type code
	private double smoothness;  // from 0 (smooth) to 1 (very rough)
	private int centerlineLights;  // 0 none, 1 yes
	private int edgeLights;  // 0 none, 1 yes, 2 yes with medium intensity
	// int autoGenerateDistSigns = Integer.valueOf(elems[7]); // auto generate distance signs - not used
	// FOR END 1 //
	private String runwayNumber1;
	private double lat1;  // on runway centerline
	private double lon1;  // on runway centerline
	private double displacedThresholdLenght1;  // always INSIDE (between) two runway ends
	private double blastPadLength1;  // outside runway end
	private int runwayMarkingsCode1;  // see runway marking code
	private int approachLightsCode1;  // see approach lighting code
	private int touchDownZoneLighting1;  // 0 no, 1 yes
	private int runwayEndLights1;  // 0 no, 1 yes onmidirectionnal, 2 yes unidirectional
	// FOR END 2 //
	private String runwayNumber2;
	private double lat2;  // on runway centerline
	private double lon2;  // on runway centerline
	private double displacedThresholdLenght2;  // always INSIDE (between) two runway ends
	private double blastPadLength2;  // outside runway end
	private int runwayMarkingsCode2;  // see runway marking code
	private int approachLightsCode2;  // see approach lighting code
	private int touchDownZoneLighting2;  // 0 no, 1 yes
	private int runwayEndLights2;  // 0 no, 1 yes onmidirectionnal, 2 yes unidirectional
	
	public Runway(double _width, int _surfaceCode, int _shoulderSurfaceCode, double _smoothness, int _centerlineLights,
	int _edgeLights, String _runwayNumber1, double _lat1, double _lon1, double _displacedThresholdLenght1, double _blastPadLength1,
	int _runwayMarkingsCode1, int _approachLightsCode1, int _touchDownZoneLighting1, int _runwayEndLights1, String _runwayNumber2,
	double _lat2, double _lon2, double _displacedThresholdLenght2, double _blastPadLength2, int _runwayMarkingsCode2,
	int _approachLightsCode2, int _touchDownZoneLighting2, int _runwayEndLights2) {
		
		this.width = _width;
		this.surfaceCode = _surfaceCode;
		this.shoulderSurfaceCode = _shoulderSurfaceCode;
		this.smoothness = _smoothness;
		this.centerlineLights = _centerlineLights;
		this.edgeLights = _edgeLights;
		this.runwayNumber1 = _runwayNumber1;
		this.setLat1(_lat1);
		this.setLon1(_lon1);
		this.displacedThresholdLenght1 = _displacedThresholdLenght1;
		this.blastPadLength1 = _blastPadLength1;
		this.runwayMarkingsCode1 = _runwayMarkingsCode1;
		this.approachLightsCode1 = _approachLightsCode1;
		this.touchDownZoneLighting1 = _touchDownZoneLighting1;
		this.runwayEndLights1 = _runwayEndLights1;
		this.runwayNumber2 = _runwayNumber2;
		this.setLat2(_lat2);
		this.setLon2(_lon2);
		this.displacedThresholdLenght2 = _displacedThresholdLenght2;
		this.blastPadLength2 = _blastPadLength2;
		this.runwayMarkingsCode2 = _runwayMarkingsCode2;
		this.approachLightsCode2 = _approachLightsCode2;
		this.touchDownZoneLighting2 = _touchDownZoneLighting2;
		this.runwayEndLights2 = _runwayEndLights2;
		
		System.out.println("CREATING RUNWAY " + this.runwayNumber1 + "-" + this.runwayNumber2);
		
	}

	public double getLat1() {
		return lat1;
	}

	public void setLat1(double lat1) {
		this.lat1 = lat1;
	}

	public double getLon1() {
		return lon1;
	}

	public void setLon1(double lon1) {
		this.lon1 = lon1;
	}

	public double getLat2() {
		return lat2;
	}

	public void setLat2(double lat2) {
		this.lat2 = lat2;
	}

	public double getLon2() {
		return lon2;
	}

	public void setLon2(double lon2) {
		this.lon2 = lon2;
	}
	
	public String getRunwayID () {
		return this.runwayNumber1 + "/" + this.runwayNumber2;
	}

}
